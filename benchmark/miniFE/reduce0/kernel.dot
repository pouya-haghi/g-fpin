digraph "DFG for'kernel' function" {
	Node0MASK[shape=record, label="(0) MASK"];
	Node1Iter[shape=record, label="(1) Iter"];
	Node2MASK[shape=record, label="(2) MASK"];
	Node3MASK[shape=record, label="(3) MASK"];
	Node4RFs[shape=record, label="(4) RFs"];
	Node5SIN[shape=record, label="(5) SIN"];
	Node6add[shape=record, label="(6) add"];
	Node7SOUT[shape=record, label="(7) SOUT"];
	Node9icmp[shape=record, label="(9) icmp"];
	Node10br[shape=record, label="(10) br"];
	Node11trunc[shape=record, label="(11) trunc"];
	Node12SOUT[shape=record, label="(12) SOUT"];
	Node15MASK[shape=record, label="(15) MASK"];
	Node16MASK[shape=record, label="(16) MASK"];
	Node17icmp[shape=record, label="(17) icmp"];
	Node18br[shape=record, label="(18) br"];
	Node19MASK[shape=record, label="(19) MASK"];
	Node23trunc[shape=record, label="(23) trunc"];
	Node24SOUT[shape=record, label="(24) SOUT"];
edge [color=red]
	Node6add -> Node0MASK
	Node19MASK -> Node2MASK
	Node16MASK -> Node3MASK
	Node1Iter -> Node4RFs
	Node4RFs -> Node5SIN
	Node0MASK -> Node6add
	Node5SIN -> Node6add
	Node6add -> Node7SOUT
	Node3MASK -> Node9icmp
	Node9icmp -> Node10br
	Node1Iter -> Node11trunc
	Node11trunc -> Node12SOUT
	Node3MASK -> Node16MASK
	Node15MASK -> Node17icmp
	Node2MASK -> Node17icmp
	Node17icmp -> Node18br
	Node15MASK -> Node19MASK
	Node2MASK -> Node19MASK
	Node1Iter -> Node23trunc
	Node23trunc -> Node24SOUT
	Node5SIN -> Node9icmp
	Node5SIN -> Node15MASK
	Node5SIN -> Node16MASK
	Node5SIN -> Node15MASK
}
